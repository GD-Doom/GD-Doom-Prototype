name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  # The number of days to retain artifacts
  RETENTION_DAYS: 30

  # The vcpkg repo commit to checkout
  VCPKG_COMMIT: 0857a4b08c14030bbe41e80accb2b1fddb047a74
  # vcpkg caching
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

jobs:

  gd-doom-sdl-linux-ninja:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libsdl2-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DEDGE_SOKOL_GL=ON

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - uses: actions/upload-artifact@v4
      with:
        name: gd-doom-sdl-linux-ninja
        path: |
          ${{github.workspace}}/content
          ${{github.workspace}}/crosshairs
          ${{github.workspace}}/overlays
          ${{github.workspace}}/soundfont
          ${{github.workspace}}/edge-classic
        retention-days: ${{env.RETENTION_DAYS}}

  gd-doom-godot-linux-ninja:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4
    - uses: friendlyanon/setup-vcpkg@v1
      with: { committish: "${{env.VCPKG_COMMIT}}", cache: true }
    - uses: actions/github-script@v7
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build automake autoconf libtool pkg-config

    - name: Build GD-Doom Godot Linux Ninja
      run: cmake --preset gd-doom-godot-ninja-release && cmake --build build/gd-doom-godot-ninja-release        

  gd-doom-sdl-windows-msvc:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure CMake MSVC
        run: mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      - name: Build MSVC
        run: cmake --build build --config ${{env.BUILD_TYPE}}
      - uses: actions/upload-artifact@v4
        with:
          name: gd-doom-sdl-windows-msvc
          path: |
            content
            crosshairs
            overlays
            soundfont
            edge-classic.exe
            *.dll
          retention-days: ${{env.RETENTION_DAYS}}

  gd-doom-godot-windows-msvc:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: friendlyanon/setup-vcpkg@v1
        with: { committish: "${{env.VCPKG_COMMIT}}", cache: true }
      - uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
      
      - name: Build GD-Doom Godot Windows MSVC
        run: cmake --preset gd-doom-godot-msvc && cmake --build build/gd-doom-godot-msvc --config ${{env.BUILD_TYPE}}